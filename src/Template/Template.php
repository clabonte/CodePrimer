<?php

namespace CodePrimer\Template;

use Twig\Extension\AbstractExtension;

class Template
{
    /** @var string The name of the template */
    private $name;

    /** @var Artifact The artifact that will be generated by this template */
    private $artifact;

    /** @var AbstractExtension[] The list of extensions required by this template */
    private $extensions;

    /** @var string A description of the template to allow CodePrimer users understand its purpose */
    private $description;

    /** @var string The current stability status of this template */
    private $status;

    /**
     * Template constructor.
     *
     * @param AbstractExtension[] $extensions
     */
    public function __construct(string $name, Artifact $artifact, array $extensions = [])
    {
        $this->name = $name;
        $this->artifact = $artifact;
        $this->extensions = $extensions;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function getArtifact(): Artifact
    {
        return $this->artifact;
    }

    /**
     * @return AbstractExtension[]
     */
    public function getExtensions(): array
    {
        return $this->extensions;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * @codeCoverageIgnore
     */
    public function setDescription(string $description): Template
    {
        $this->description = $description;

        return $this;
    }

    /**
     * @codeCoverageIgnore
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * @codeCoverageIgnore
     */
    public function setStatus(string $status): Template
    {
        $this->status = $status;

        return $this;
    }
}
