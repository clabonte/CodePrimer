{# INTERNAL template used to maintain the 'Artifacts' article to list the artifacts currently available in our TemplateRegistry class.
 # The actual file can be updated via the following command:
 # composer update-doc
 #}
# CodePrimer Artifacts
CodePrimer's **main objective** is to produce various artifacts based on unique modeling approach. This article presents a list of artifacts currently generated along with a roadmap of the ones to come.

## Supported Artifacts
The following artifacts can be generated by CodePrimer's current implementation

### Supported Source Code Artifacts
The following **source code** artifacts can be generated by CodePrimer:

| Name | Type | Format | Variant | Description | Status |
| ---- | ---- | ------ | ------- | ----------- | ------ |
{% for template in templateRegistry.listTemplates('code') %}
| **{{ template.name }}** | {{ template.artifact.type }} | {{ template.artifact.format }} | {{ template.artifact.variant }} | {{ template.description }} | *{{ template.status == 'stable' ? '*stable*' : template.status }}* |
{% endfor %}

### Supported Tests Artifacts
The following **automated tests** artifacts can be generated by CodePrimer:

| Name | Type | Format | Variant | Description | Status |
| ---- | ---- | ------ | ------- | ----------- | ------ |
{% for template in templateRegistry.listTemplates('tests') %}
| **{{ template.name }}** | {{ template.artifact.type }} | {{ template.artifact.format }} | {{ template.artifact.variant }} | {{ template.description }} | *{{ template.status == 'stable' ? '*stable*' : template.status }}* |
{% endfor %}

### Supported Documentation Artifacts
The following **documentation** artifacts can be generated by CodePrimer:

| Name | Type | Format | Variant | Description | Status |
| ---- | ---- | ------ | ------- | ----------- | ------ |
{% for template in templateRegistry.listTemplates('documentation') %}
| **{{ template.name }}** | {{ template.artifact.type }} | {{ template.artifact.format }} | {{ template.artifact.variant }} | {{ template.description }} | *{{ template.status == 'stable' ? '*stable*' : template.status }}* |
{% endfor %}

### Supported Project and Configuration Artifacts
The following **project** and **configuration** artifacts can be generated by CodePrimer:

| Name | Type | Format | Variant | Description | Status |
| ---- | ---- | ------ | ------- | ----------- | ------ |
{% for template in templateRegistry.listTemplates('project') %}
| **{{ template.name }}** | {{ template.artifact.type }} | {{ template.artifact.format }} | {{ template.artifact.variant }} | {{ template.description }} | *{{ template.status == 'stable' ? '*stable*' : template.status }}* |
{% endfor %}
{% for template in templateRegistry.listTemplates('configuration') %}
| **{{ template.name }}** | {{ template.artifact.type }} | {{ template.artifact.format }} | {{ template.artifact.variant }} | {{ template.description }} | *{{ template.status == 'stable' ? '*stable*' : template.status }}* |
{% endfor %}


## Planned Artifacts
CodePrimer's vision is to allow architects and senior developers to model business backends in a programming language and framework agnostic approach in order to:
- Focus discussions and design at the business level to ease communication with their business partners
- Quickly adapt/iterate their design with minimal impact on implementation
- **Prime** the development of the application using **production-grade** practices for properly guide other developers in the right direction

At some point in time, we need to turn our beautiful design in actual source code and, for that, we need to select the programming language and frameworks based on our needs, desire and experience.
**CodePrimer has been designed to easily generate its various artifacts using any programming language and framework**.

> This is where you can easily contribute to the project. If you are an expert in a language/framework currently missing, feel free to [contribute][CONTRIBUTING.md]

### Planned Artifacts
Based on the current roadmap, the following artifacts will be added to CodePrimer in the near future:

| Category | Type | Format | Variant | Description | Issue |
| -------- | ---- | ------ | ------- | ----------- | ----- |
| Source Code | ReadDataClient | PHP | Interface | [ReadDataClient Interface](doc/bundle/DataClient) | #49