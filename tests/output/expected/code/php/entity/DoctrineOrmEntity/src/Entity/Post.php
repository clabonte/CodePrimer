<?php
/*
 * This file has been generated by CodePrimer.io
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace CodePrimer\Tests\Entity;

use \DateTime;
use \DateTimeInterface;
use Doctrine\ORM\Mapping as ORM;

/**
 * Class Post
 * Post created by the user
 * @package CodePrimer\Tests\Entity
 * @ORM\Entity(repositoryClass="App\Repository\PostRepository")
 * @ORM\Table(name="posts", indexes={@ORM\Index(name="author_id_idx", columns={"author_id"}), @ORM\Index(name="topic_id_idx", columns={"topic_id"})})
 */
class Post
{
    /**
     * @var string The post title
     * @ORM\Column(name="title", type="string", length=255)
     */
    protected $title = '';

    /**
     * @var string The post body
     * @ORM\Column(name="body", type="text")
     */
    protected $body = '';

    /**
     * @var User The user who created this post
     * @ORM\ManyToOne(targetEntity="CodePrimer\Tests\Entity\User", inversedBy="posts")
     */
    protected $author;

    /**
     * @var Topic The topic to which this post belongs
     * @ORM\ManyToOne(targetEntity="CodePrimer\Tests\Entity\Topic", inversedBy="posts")
     */
    protected $topic;

    /**
     * @var DateTimeInterface|null Time at which the post was created
     * @ORM\Column(name="created", type="datetime", nullable=true)
     */
    protected $created = null;

    /**
     * @var DateTimeInterface|null Last time at which the post was updated
     * @ORM\Column(name="updated", type="datetime", nullable=true)
     */
    protected $updated = null;

    /**
     * @var string DB unique identifier field
     * @ORM\Id()
     * @ORM\GeneratedValue(strategy="UUID")
     * @ORM\Column(name="id", type="string", length=36)
     */
    protected $id = '';

    /**
     * Post default constructor
     * @var string $title The post title
     * @var string $body The post body
     * @var User $author The user who created this post
     * @var Topic $topic The topic to which this post belongs
     * @var string $id DB unique identifier field
     */
    public function __construct(
        string $title,
        string $body,
        User $author,
        Topic $topic,
        string $id
    ) {
        $this->title = $title;
        $this->body = $body;
        $this->author = $author;
        $this->topic = $topic;
        $this->id = $id;
    }

    /**
     * @param string $title
     * @return Post
     */
    public function setTitle(string $title): Post
    {
        $this->title = $title;
        return $this;
    }

    /**
     * @return string
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * @param string $body
     * @return Post
     */
    public function setBody(string $body): Post
    {
        $this->body = $body;
        return $this;
    }

    /**
     * @return string
     */
    public function getBody(): string
    {
        return $this->body;
    }

    /**
     * @param User $author
     * @return Post
     */
    public function setAuthor(User $author): Post
    {
        $this->author = $author;
        return $this;
    }

    /**
     * @return User
     */
    public function getAuthor(): User
    {
        return $this->author;
    }

    /**
     * @param Topic $topic
     * @return Post
     */
    public function setTopic(Topic $topic): Post
    {
        $this->topic = $topic;
        return $this;
    }

    /**
     * @return Topic
     */
    public function getTopic(): Topic
    {
        return $this->topic;
    }

    /**
     * @param DateTimeInterface|null $created
     * @return Post
     */
    public function setCreated(?DateTimeInterface $created): Post
    {
        $this->created = $created;
        return $this;
    }

    /**
     * @return DateTimeInterface|null
     */
    public function getCreated(): ?DateTimeInterface
    {
        return $this->created;
    }

    /**
     * @param DateTimeInterface|null $updated
     * @return Post
     */
    public function setUpdated(?DateTimeInterface $updated): Post
    {
        $this->updated = $updated;
        return $this;
    }

    /**
     * @return DateTimeInterface|null
     */
    public function getUpdated(): ?DateTimeInterface
    {
        return $this->updated;
    }

    /**
     * @param string $id
     * @return Post
     */
    public function setId(string $id): Post
    {
        $this->id = $id;
        return $this;
    }

    /**
     * @return string
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Automatically manage timestamps upon entity creation
     * @ORM\PrePersist
     */
    public function updateTimestampsBeforePersist(): void
    {
        $this->updated = new DateTime('now');
        if ($this->created === null) {
            $this->created = new DateTime('now');
        }
    }

    /**
     * Automatically manage timestamp upon entity update
     * @ORM\PreUpdate
     */
    public function updateTimestampBeforeUpdate(): void
    {
        $this->updated = new DateTime('now');
    }
}
