<?php
/*
 * This file has been generated by CodePrimer.io
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace CodePrimer\Tests\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Class Metadata
 * Variable set of extra information
 * @package CodePrimer\Tests\Entity
 * @ORM\Entity(repositoryClass="App\Repository\MetadataRepository")
 * @ORM\Table(name="metadata", indexes={@ORM\Index(name="user_id_idx", columns={"user_id"})})
 */
class Metadata
{
    /**
     * @var string The name to uniquely identify this metadata
     * @ORM\Column(name="name", type="string", length=255)
     */
    protected $name = '';

    /**
     * @var string The value associated with this metadata
     * @ORM\Column(name="value", type="text")
     */
    protected $value = '';

    /**
     * @var string DB unique identifier field
     * @ORM\Id()
     * @ORM\GeneratedValue(strategy="UUID")
     * @ORM\Column(name="id", type="string", length=36)
     */
    protected $id = '';

    /**
     * @var User|null Foreign relationship field
     * @ORM\ManyToOne(targetEntity="CodePrimer\Tests\Entity\User", inversedBy="metadata")
     */
    protected $user = null;

    /**
     * Metadata default constructor
     * @var string $name The name to uniquely identify this metadata
     * @var string $value The value associated with this metadata
     * @var string $id DB unique identifier field
     */
    public function __construct(
        string $name,
        string $value,
        string $id
    ) {
        $this->name = $name;
        $this->value = $value;
        $this->id = $id;
    }

    /**
     * @param string $name
     * @return Metadata
     */
    public function setName(string $name): Metadata
    {
        $this->name = $name;
        return $this;
    }

    /**
     * @return string
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * @param string $value
     * @return Metadata
     */
    public function setValue(string $value): Metadata
    {
        $this->value = $value;
        return $this;
    }

    /**
     * @return string
     */
    public function getValue(): string
    {
        return $this->value;
    }

    /**
     * @param string $id
     * @return Metadata
     */
    public function setId(string $id): Metadata
    {
        $this->id = $id;
        return $this;
    }

    /**
     * @return string
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * @param User|null $user
     * @return Metadata
     */
    public function setUser(?User $user): Metadata
    {
        $this->user = $user;
        return $this;
    }

    /**
     * @return User|null
     */
    public function getUser(): ?User
    {
        return $this->user;
    }

}
