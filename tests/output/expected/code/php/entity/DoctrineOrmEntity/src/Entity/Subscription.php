<?php
/*
 * This file has been generated by CodePrimer.io
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace CodePrimer\Tests\Entity;

use \DateTime;
use \DateTimeInterface;
use Doctrine\ORM\Mapping as ORM;

/**
 * Class Subscription
 * The subscription bought by a user to user our services
 * @package CodePrimer\Tests\Entity
 * @ORM\Entity(repositoryClass="App\Repository\SubscriptionRepository")
 * @ORM\Table(name="subscriptions", indexes={@ORM\Index(name="user_id_idx", columns={"user_id"})})
 */
class Subscription
{
    /**
     * @var User The user to which this subscription belongs
     * @ORM\OneToOne(targetEntity="CodePrimer\Tests\Entity\User", inversedBy="subscription")
     */
    protected $user;

    /**
     * @var string The plan subscribed by this user in our billing system
     * @ORM\Column(name="plan", type="string", length=255)
     */
    protected $plan = '';

    /**
     * @var DateTimeInterface The date at which the subscription must be renewed
     * @ORM\Column(name="renewal", type="date")
     */
    protected $renewal;

    /**
     * @var DateTimeInterface|null Time at which the post was created
     * @ORM\Column(name="created", type="datetime", nullable=true)
     */
    protected $created = null;

    /**
     * @var DateTimeInterface|null Last time at which the post was updated
     * @ORM\Column(name="updated", type="datetime", nullable=true)
     */
    protected $updated = null;

    /**
     * @var string DB unique identifier field
     * @ORM\Id()
     * @ORM\GeneratedValue(strategy="UUID")
     * @ORM\Column(name="id", type="string", length=36)
     */
    protected $id = '';

    /**
     * Subscription default constructor
     * @var User $user The user to which this subscription belongs
     * @var string $plan The plan subscribed by this user in our billing system
     * @var DateTimeInterface $renewal The date at which the subscription must be renewed
     * @var string $id DB unique identifier field
     */
    public function __construct(
        User $user,
        string $plan,
        DateTimeInterface $renewal,
        string $id
    ) {
        $this->user = $user;
        $this->plan = $plan;
        $this->renewal = $renewal;
        $this->id = $id;
    }

    /**
     * @param User $user
     * @return Subscription
     */
    public function setUser(User $user): Subscription
    {
        $this->user = $user;
        return $this;
    }

    /**
     * @return User
     */
    public function getUser(): User
    {
        return $this->user;
    }

    /**
     * @param string $plan
     * @return Subscription
     */
    public function setPlan(string $plan): Subscription
    {
        $this->plan = $plan;
        return $this;
    }

    /**
     * @return string
     */
    public function getPlan(): string
    {
        return $this->plan;
    }

    /**
     * @param DateTimeInterface $renewal
     * @return Subscription
     */
    public function setRenewal(DateTimeInterface $renewal): Subscription
    {
        $this->renewal = $renewal;
        return $this;
    }

    /**
     * @return DateTimeInterface
     */
    public function getRenewal(): DateTimeInterface
    {
        return $this->renewal;
    }

    /**
     * @param DateTimeInterface|null $created
     * @return Subscription
     */
    public function setCreated(?DateTimeInterface $created): Subscription
    {
        $this->created = $created;
        return $this;
    }

    /**
     * @return DateTimeInterface|null
     */
    public function getCreated(): ?DateTimeInterface
    {
        return $this->created;
    }

    /**
     * @param DateTimeInterface|null $updated
     * @return Subscription
     */
    public function setUpdated(?DateTimeInterface $updated): Subscription
    {
        $this->updated = $updated;
        return $this;
    }

    /**
     * @return DateTimeInterface|null
     */
    public function getUpdated(): ?DateTimeInterface
    {
        return $this->updated;
    }

    /**
     * @param string $id
     * @return Subscription
     */
    public function setId(string $id): Subscription
    {
        $this->id = $id;
        return $this;
    }

    /**
     * @return string
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Automatically manage timestamps upon entity creation
     * @ORM\PrePersist
     */
    public function updateTimestampsBeforePersist(): void
    {
        $this->updated = new DateTime('now');
        if ($this->created === null) {
            $this->created = new DateTime('now');
        }
    }

    /**
     * Automatically manage timestamp upon entity update
     * @ORM\PreUpdate
     */
    public function updateTimestampBeforeUpdate(): void
    {
        $this->updated = new DateTime('now');
    }
}
